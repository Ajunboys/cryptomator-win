<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2016 Sebastian Stenzel
  This file is licensed under the terms of the MIT license.
  See the LICENSE file for more info.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.cryptomator</groupId>
	<artifactId>cryptomator-win</artifactId>
	<version>1.3.0-rc5</version>
	<packaging>pom</packaging>
	<name>Cryptomator Windows installer</name>

	<properties>
		<cryptomator.launcher.version>${project.version}</cryptomator.launcher.version>
		<javafx.tools.ant.jar>${java.home}/../lib/ant-javafx.jar</javafx.tools.ant.jar>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.cryptomator</groupId>
			<artifactId>launcher</artifactId>
			<version>${cryptomator.launcher.version}</version>
		</dependency>
	</dependencies>
	
	<profiles>
		<profile>
			<id>x86</id>
			<activation>
				<property>
					<name>sun.arch.data.model</name>
					<value>32</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.coderplus.maven.plugins</groupId>
						<artifactId>copy-rename-maven-plugin</artifactId>
						<version>1.0.1</version>
						<executions>
							<execution>
								<id>copy-x86-dll</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<sourceFile>${project.basedir}/package/windows/WinFunctions-x86.dll</sourceFile>
									<destinationFile>${project.build.directory}/libs/WinFunctions.dll</destinationFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>x64</id>
			<activation>
				<property>
					<name>sun.arch.data.model</name>
					<value>64</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.coderplus.maven.plugins</groupId>
						<artifactId>copy-rename-maven-plugin</artifactId>
						<version>1.0.1</version>
						<executions>
							<execution>
								<id>copy-x64-dll</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<sourceFile>${project.basedir}/package/windows/WinFunctions-x64.dll</sourceFile>
									<destinationFile>${project.build.directory}/libs/WinFunctions.dll</destinationFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-libs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/libs</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>create-deployment-bundle</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target name="create-exe" xmlns:fx="javafx:com.sun.javafx.tools.ant">
								<taskdef uri="javafx:com.sun.javafx.tools.ant" resource="com/sun/javafx/tools/ant/antlib.xml" classpath="${project.basedir}:${javafx.tools.ant.jar}" />

								<!-- Define application to build -->
								<fx:application id="Cryptomator" name="Cryptomator" version="${project.version}" mainClass="org.cryptomator.launcher.Cryptomator" />

								<!-- Create main application jar -->
								<fx:jar destfile="${project.build.directory}/Cryptomator-${project.version}.jar">
									<fx:application refid="Cryptomator" />
									<fx:fileset dir="${project.build.directory}/libs" includes="launcher-${cryptomator.launcher.version}.jar" />
									<fx:resources>
										<fx:fileset dir="${project.build.directory}/libs" type="jar" includes="*.jar" excludes="launcher-${cryptomator.launcher.version}.jar" />
									</fx:resources>
									<fx:manifest>
										<fx:attribute name="Implementation-Vendor" value="cryptomator.org" />
										<fx:attribute name="Implementation-Title" value="Cryptomator" />
										<fx:attribute name="Implementation-Version" value="${project.version}" />
									</fx:manifest>
								</fx:jar>

								<!-- Create native package -->
								<fx:deploy nativeBundles="exe" outdir="${project.build.directory}" outfile="Cryptomator-${project.version}" verbose="true">
									<fx:application refid="Cryptomator" />
									<fx:info title="Cryptomator" vendor="cryptomator.org" copyright="cryptomator.org" license="MIT" category="Utility">
										<fx:association mimetype="application/x-vnd.cryptomator-vault-metadata" extension="cryptomator" description="Cryptomator Vault Metadata" />
									</fx:info>
									<fx:platform javafx="2.2+" j2se="8.0">
										<fx:property name="cryptomator.logPath" value="~/AppData/Roaming/Cryptomator/cryptomator.log" />
										<fx:property name="cryptomator.upgradeLogPath" value="~/AppData/Roaming/Cryptomator/upgrade.log" />
										<fx:property name="cryptomator.settingsPath" value="~/AppData/Roaming/Cryptomator/settings.json" />
										<fx:property name="cryptomator.keychainPath" value="~/AppData/Roaming/Cryptomator/keychain.json" />
										<fx:property name="cryptomator.ipcPortPath" value="~/AppData/Roaming/Cryptomator/ipcPort.bin" />
										<fx:jvmarg value="-Xmx512m" />
									</fx:platform>
									<fx:resources>
										<fx:fileset dir="." type="license" includes="full-license.rtf" />
										<fx:fileset dir="${project.build.directory}" type="jar" includes="Cryptomator-${project.version}.jar" />
										<fx:fileset dir="${project.build.directory}/libs" type="jar" includes="*.jar" excludes="launcher-${cryptomator.launcher.version}.jar" />
										<fx:fileset dir="${project.build.directory}/libs" type="data" includes="*.dll" />
									</fx:resources>
									<fx:permissions elevated="false" />
									<fx:preferences install="true" />
								</fx:deploy>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
